<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/lucide.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            animation: fadeIn 0.8s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Header Styles */
        .header {
            text-align: center;
            margin-bottom: 3rem;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            font-size: 3rem;
            color: white;
            margin-bottom: 0.5rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            animation: slideDown 0.8s ease-out;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .header p {
            font-size: 1.2rem;
            color: rgba(255, 255, 255, 0.9);
            animation: slideUp 0.8s ease-out 0.2s both;
        }

        @keyframes slideUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Alert Styles */
        .alert {
            padding: 1rem 1.5rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            font-weight: 500;
            animation: slideInAlert 0.5s ease-out;
            transition: all 0.3s ease;
        }

        @keyframes slideInAlert {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
        }

        .alert-success {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            border-left: 4px solid #2e7d2e;
            box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
        }

        .alert-error {
            background: linear-gradient(135deg, #f44336, #d32f2f);
            color: white;
            border-left: 4px solid #c62828;
            box-shadow: 0 4px 15px rgba(244, 67, 54, 0.3);
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            padding: 2rem;
            border-radius: 16px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 0.5rem;
            animation: countUp 1s ease-out;
        }

        @keyframes countUp {
            from { opacity: 0; transform: scale(0.5); }
            to { opacity: 1; transform: scale(1); }
        }

        .stat-label {
            font-size: 1rem;
            color: #666;
            font-weight: 500;
        }

        /* Navigation */
        .nav {
            text-align: center;
            margin-bottom: 2rem;
        }

        /* Button Styles */
        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #5a6268);
            color: white;
            box-shadow: 0 4px 15px rgba(108, 117, 125, 0.4);
        }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(108, 117, 125, 0.6);
        }

        .btn-danger {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
            box-shadow: 0 4px 15px rgba(220, 53, 69, 0.4);
        }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(220, 53, 69, 0.6);
        }

        .btn-sm {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
        }

        /* Search and Filter Section */
        .search-filter-section {
            background: rgba(255, 255, 255, 0.95);
            padding: 2rem;
            border-radius: 16px;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .search-filter-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 0.5rem;
            font-size: 1rem;
        }

        .form-input, .form-select {
            padding: 0.75rem 1rem;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        /* Employee Grid */
        .employee-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .employee-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
            overflow: hidden;
            animation: cardSlideIn 0.5s ease-out;
        }

        @keyframes cardSlideIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .employee-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .employee-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        }

        .employee-name {
            font-size: 1.25rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #f0f0f0;
        }

        .employee-info {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .employee-info span {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #666;
            font-size: 0.95rem;
        }

        .department-badge {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .employee-actions {
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .employee-actions form {
            display: inline-flex;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .empty-state-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.7;
        }

        .empty-state h3 {
            font-size: 1.5rem;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .empty-state p {
            color: #666;
            margin-bottom: 1.5rem;
        }

        .mt-2 {
            margin-top: 1rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .header h1 {
                font-size: 2rem;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .search-filter-grid {
                grid-template-columns: 1fr;
            }

            .employee-grid {
                grid-template-columns: 1fr;
            }

            .employee-actions {
                justify-content: center;
            }

            .btn {
                font-size: 0.9rem;
                padding: 0.6rem 1.2rem;
            }
        }

        /* Loading Animation */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Smooth Scrolling */
        html {
            scroll-behavior: smooth;
        }

        /* Focus Styles for Accessibility */
        .btn:focus, .form-input:focus, .form-select:focus {
            outline: 2px solid #667eea;
            outline-offset: 2px;
        }

        /* Print Styles */
        @media print {
            body {
                background: white;
                color: black;
            }
            
            .header, .nav, .search-filter-section, .employee-actions {
                display: none;
            }
            
            .employee-card {
                break-inside: avoid;
                box-shadow: none;
                border: 1px solid #ccc;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>🏢 Employee Management</h1>
            <p>Manage your team with modern efficiency</p>
        </div>

        <!-- Alert Messages -->
        <% if (typeof query !== 'undefined' && query.success) { %>
            <div class="alert alert-success">
                ✅ <%= query.success %>
            </div>
        <% } %>
        
        <% if (typeof query !== 'undefined' && query.error) { %>
            <div class="alert alert-error">
                ❌ <%= query.error %>
            </div>
        <% } %>

        <!-- Stats -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number"><%= employees.length %></div>
                <div class="stat-label">Total Employees</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= employees.filter(emp => emp.department).length %></div>
                <div class="stat-label">Assigned Departments</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= [...new Set(employees.map(emp => emp.department).filter(Boolean))].length %></div>
                <div class="stat-label">Active Departments</div>
            </div>
        </div>

        <!-- Navigation -->
        <div class="nav">
            <a href="/add" class="btn btn-primary">
                <span>➕</span> Add New Employee
            </a>
        </div>

        <!-- Search and Filter -->
        <div class="search-filter-section">
            <form method="GET" action="/">
                <div class="search-filter-grid">
                    <div class="form-group">
                        <label class="form-label">🔍 Search Employees</label>
                        <input 
                            type="text" 
                            name="search" 
                            class="form-input" 
                            placeholder="Search by name, email, or position..."
                            value="<%= currentSearch %>"
                        >
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">🏢 Department</label>
                        <select name="department" class="form-select">
                            <option value="all" <%= currentDepartment === 'all' ? 'selected' : '' %>>All Departments</option>
                            <% departments.forEach(dept => { %>
                                <option value="<%= dept %>" <%= currentDepartment === dept ? 'selected' : '' %>>
                                    <%= dept %>
                                </option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">📊 Sort By</label>
                        <select name="sort" class="form-select">
                            <option value="default" <%= currentSort === 'default' ? 'selected' : '' %>>Recently Added</option>
                            <option value="name" <%= currentSort === 'name' ? 'selected' : '' %>>Name A-Z</option>
                            <option value="date" <%= currentSort === 'date' ? 'selected' : '' %>>Join Date</option>
                            <option value="salary" <%= currentSort === 'salary' ? 'selected' : '' %>>Salary</option>
                        </select>
                    </div>
                </div>
                
                <div style="margin-top: 1rem; text-align: center;">
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                    <a href="/" class="btn btn-secondary">Clear All</a>
                </div>
            </form>
        </div>

        <!-- Employee Grid -->
        <% if (employees.length > 0) { %>
            <div class="employee-grid">
                <% employees.forEach(emp => { %>
                    <div class="employee-card">
                        <div class="employee-name">
                            <%= emp.name %>
                        </div>
                        
                        <div class="employee-info">
                            <% if (emp.email) { %>
                                <span>
                                    📧 <%= emp.email %>
                                </span>
                            <% } %>
                            
                            <% if (emp.position) { %>
                                <span>
                                    💼 <%= emp.position %>
                                </span>
                            <% } %>
                            
                            <% if (emp.department) { %>
                                <span>
                                    🏢 <span class="department-badge"><%= emp.department %></span>
                                </span>
                            <% } %>
                            
                            <% if (emp.salary) { %>
                                <span>
                                    💰 $<%= emp.salary.toLocaleString() %>
                                </span>
                            <% } %>
                            
                            <span>
                                📅 Joined <%= emp.formattedJoinDate %>
                            </span>
                        </div>
                        
                        <div class="employee-actions">
                            <a href="/view/<%= emp._id %>" class="btn btn-sm btn-secondary">
                                👁️ View
                            </a>
                            <a href="/edit/<%= emp._id %>" class="btn btn-sm btn-primary">
                                ✏️ Edit
                            </a>
                            <form action="/delete/<%= emp._id %>" method="POST" style="display: inline;">
                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to remove this employee?')">
                                    🗑️ Remove
                                </button>
                            </form>
                        </div>
                    </div>
                <% }) %>
            </div>
        <% } else { %>
            <div class="empty-state">
                <div class="empty-state-icon">👥</div>
                <h3>No employees found</h3>
                <p>Start by adding your first employee to the system.</p>
                <a href="/add" class="btn btn-primary mt-2">Add First Employee</a>
            </div>
        <% } %>
    </div>

    <script>
        // Auto-hide success/error messages after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateY(-10px)';
                    setTimeout(() => alert.remove(), 300);
                }, 5000);
            });

            // Add loading state to form submissions
            const forms = document.querySelectorAll('form');
            forms.forEach(form => {
                form.addEventListener('submit', function(e) {
                    const submitBtn = form.querySelector('button[type="submit"]');
                    if (submitBtn) {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<span class="loading"></span> Processing...';
                    }
                });
            });

            // Smooth scroll to top when clicking header
            const header = document.querySelector('.header');
            if (header) {
                header.addEventListener('click', function() {
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                });
                header.style.cursor = 'pointer';
            }

            // Add keyboard navigation for cards
            const employeeCards = document.querySelectorAll('.employee-card');
            employeeCards.forEach((card, index) => {
                card.setAttribute('tabindex', '0');
                card.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ' ') {
                        const viewBtn = card.querySelector('a[href*="/view/"]');
                        if (viewBtn) {
                            viewBtn.click();
                        }
                    }
                });
            });

            // Add real-time search functionality
            const searchInput = document.querySelector('input[name="search"]');
            if (searchInput) {
                let searchTimeout;
                searchInput.addEventListener('input', function() {
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(() => {
                        // Add visual feedback for search
                        const cards = document.querySelectorAll('.employee-card');
                        const searchTerm = this.value.toLowerCase();
                        
                        cards.forEach(card => {
                            const text = card.textContent.toLowerCase();
                            if (searchTerm === '' || text.includes(searchTerm)) {
                                card.style.display = 'block';
                                card.style.animation = 'cardSlideIn 0.3s ease-out';
                            } else {
                                card.style.display = 'none';
                            }
                        });
                    }, 300);
                });
            }

            // Add animation delays for staggered card appearance
            const cards = document.querySelectorAll('.employee-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
            });

            // Add hover effects for interactive elements
            document.querySelectorAll('.stat-card').forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px) scale(1.02)';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });
        });
    </script>
</body>
</html>